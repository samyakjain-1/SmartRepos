name: Daily GitHub Trending Scraper

on:
  schedule:
    # Run daily at 6:00 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  scrape-trending:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Checkout repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🔧 Setup Modelence environment
        run: |
          echo "MODELENCE_CRON_ENABLED=true" >> .modelence.env
          echo "MODELENCE_TELEMETRY_ENABLED=false" >> .modelence.env
          echo "MODELENCE_ENVIRONMENT_ID=${{ secrets.MODELENCE_ENVIRONMENT_ID }}" >> .modelence.env
          echo "MODELENCE_SERVICE_ENDPOINT=${{ secrets.MODELENCE_SERVICE_ENDPOINT }}" >> .modelence.env
          echo "MODELENCE_SERVICE_TOKEN=${{ secrets.MODELENCE_SERVICE_TOKEN }}" >> .modelence.env
          echo "MODELENCE_CONTAINER_ID=${{ secrets.MODELENCE_CONTAINER_ID }}" >> .modelence.env
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN_SCRAPING }}" >> .modelence.env
      
      - name: 🏗️ Build project
        run: npm run build
      
      - name: 🕷️ Run trending scraper
        run: |
          echo "🚀 Starting GitHub trending scraping job..."
          echo "📅 Current time: $(date)"
          chmod +x scripts/scrape-trending-modelence.js
          timeout 600 node scripts/scrape-trending-modelence.js
        env:
          NODE_ENV: production
          TZ: UTC
      
      - name: 📊 Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: scraping-logs-${{ github.run_number }}
          path: |
            .modelence/logs/
            *.log
          retention-days: 7
          if-no-files-found: ignore
      
      - name: 💬 Notify on failure
        if: failure()
        run: |
          echo "❌ GitHub trending scraping job failed!"
          echo "📋 Run ID: ${{ github.run_id }}"
          echo "🔗 Job URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "⏰ Failed at: $(date)"
      
      - name: ✅ Success notification
        if: success()
        run: |
          echo "🎉 GitHub trending scraping completed successfully!"
          echo "📅 Completed at: $(date)" 